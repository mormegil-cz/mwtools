//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MWLib {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class MWLibResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal MWLibResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("MWLib.MWLibResources", typeof(MWLibResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument must be User.
        /// </summary>
        internal static string ArgumentMustBeUser {
            get {
                return ResourceManager.GetString("ArgumentMustBeUser", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Argument not expected for {0}.
        /// </summary>
        internal static string ArgumentNotExpectedFor {
            get {
                return ResourceManager.GetString("ArgumentNotExpectedFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find suitable file for {0}.
        /// </summary>
        internal static string CannotFindSuitableFile {
            get {
                return ResourceManager.GetString("CannotFindSuitableFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Duplicate {0} argument.
        /// </summary>
        internal static string DuplicateArgument {
            get {
                return ResourceManager.GetString("DuplicateArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to End of file reached.
        /// </summary>
        internal static string EndOfFileReached {
            get {
                return ResourceManager.GetString("EndOfFileReached", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid parameters.
        /// </summary>
        internal static string InvalidParameters {
            get {
                return ResourceManager.GetString("InvalidParameters", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing argument required for {0}.
        /// </summary>
        internal static string MissingArgumentRequiredFor {
            get {
                return ResourceManager.GetString("MissingArgumentRequiredFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Parameter name cannot be empty.
        /// </summary>
        internal static string ParameterNameCannotBeEmpty {
            get {
                return ResourceManager.GetString("ParameterNameCannotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Readable stream required.
        /// </summary>
        internal static string ReadableStreamRequired {
            get {
                return ResourceManager.GetString("ReadableStreamRequired", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Seeking not supported on this stream.
        /// </summary>
        internal static string SeekingNotSupported {
            get {
                return ResourceManager.GetString("SeekingNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Setting length not supported on this stream.
        /// </summary>
        internal static string SettingLengthNotSupported {
            get {
                return ResourceManager.GetString("SettingLengthNotSupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Stream already closed.
        /// </summary>
        internal static string StreamAlreadyClosed {
            get {
                return ResourceManager.GetString("StreamAlreadyClosed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This stream is read-only.
        /// </summary>
        internal static string StreamIsReadOnly {
            get {
                return ResourceManager.GetString("StreamIsReadOnly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Too many {0} arguments.
        /// </summary>
        internal static string TooManyArguments {
            get {
                return ResourceManager.GetString("TooManyArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected argument for {0}.
        /// </summary>
        internal static string UnexpectedArgumentFor {
            get {
                return ResourceManager.GetString("UnexpectedArgumentFor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unknown parameter: {0}.
        /// </summary>
        internal static string UnknownParameter {
            get {
                return ResourceManager.GetString("UnknownParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported date/time format.
        /// </summary>
        internal static string UnsupportedDateTimeFormat {
            get {
                return ResourceManager.GetString("UnsupportedDateTimeFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported file type.
        /// </summary>
        internal static string UnsupportedFileType {
            get {
                return ResourceManager.GetString("UnsupportedFileType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unsupported format.
        /// </summary>
        internal static string UnsupportedFormat {
            get {
                return ResourceManager.GetString("UnsupportedFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Value must be positive.
        /// </summary>
        internal static string ValueMustBePositive {
            get {
                return ResourceManager.GetString("ValueMustBePositive", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Writable stream required.
        /// </summary>
        internal static string WritableStreamRequired {
            get {
                return ResourceManager.GetString("WritableStreamRequired", resourceCulture);
            }
        }
    }
}
